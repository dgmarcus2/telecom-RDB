/*TELECOMMUNICATIONS COMPANY DB*/



/*SEQUENCES*/

CREATE SEQUENCE "DGMARCU2"."FPDM_SITE_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."FPDM_PHONE_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."FPDM_CUSTOMER_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."FPDM_UPGRADE_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."FPDM_PLAN_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."FPDM_COMPETITOR_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."FPDM_CONTACT_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."FPDM_COMMUNICATION_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."FPDM_INCENTIVE_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

/*SEQUENCES END*/






/*TABLES, TRIGGERS*/

CREATE TABLE "DGMARCU2"."FPDM_PLAN"
  (
    "PLAN_ID" NUMBER NOT NULL ENABLE,
    "PLAN_NM" VARCHAR2(150 BYTE) NOT NULL ENABLE,
    "MONTHLY_COST" FLOAT NOT NULL ENABLE,
    "DATA_CAP" FLOAT NOT NULL ENABLE,
    "MIN_CAP" FLOAT NOT NULL ENABLE,
    "TEXT_CAP" NUMBER NOT NULL ENABLE,
    CONSTRAINT "FPDM_PLAN_PK" PRIMARY KEY ("PLAN_ID") ENABLE,
    CONSTRAINT "FPDM_PLAN_DATA_CAP_CHK1" CHECK (DATA_CAP <= 104857600) ENABLE,
    CONSTRAINT "FPDM_PLAN_MIN_CAP_CHK1" CHECK (MIN_CAP <= 43200) ENABLE,
    CONSTRAINT "FPDM_PLAN_TEXT_CAP_CHK1" CHECK (TEXT_CAP <= 100000000) ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."FPDM_PLAN"."DATA_CAP" IS 'MEASURED IN MEGABYTES. UNLIMITED PLANS CAPPED AT 104857600 MEGABYTES (100 TERABYTES) PER MONTH';
  COMMENT ON COLUMN "DGMARCU2"."FPDM_PLAN"."MIN_CAP" IS 'NUMBER OF MINUTES ALLOWED FOR CALLS PER MONTH. UNLIMITED PLANS CAPPED AT 43200 MINUTES (NUMBER OF MINUTES IN 30 DAYS) PER MONTH';
  COMMENT ON COLUMN "DGMARCU2"."FPDM_PLAN"."TEXT_CAP" IS 'NUMBER OF TEXT MESSAGES ALLOWED TO BE SENT PER MONTH (RECEIVED TEXT MESSAGES DO NOT COUNT). UNLIMITED PLANS CAPPED AT 100000000 PER MONTH';
  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_PLAN_TRIG1"
   BEFORE INSERT ON FPDM_PLAN
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.PLAN_ID IS NULL )
   THEN
    :NEW.PLAN_ID := FPDM_PLAN_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_PLAN_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."FPDM_COMPETITOR"
  (
    "COMPETITOR_ID" NUMBER NOT NULL ENABLE,
    "COMPETITOR_NM" VARCHAR2(400 BYTE) NOT NULL ENABLE,
    CONSTRAINT "FPDM_COMPETITOR_PK" PRIMARY KEY ("COMPETITOR_ID") ENABLE
  );
  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_COMPETITOR_TRIG1"
   BEFORE INSERT ON FPDM_COMPETITOR
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.COMPETITOR_ID IS NULL )
   THEN
    :NEW.COMPETITOR_ID := FPDM_COMPETITOR_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_COMPETITOR_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."FPDM_CONTACT"
  (
    "CONTACT_ID" NUMBER NOT NULL ENABLE,
    "CUSTOMER_OF" NUMBER NOT NULL ENABLE,
    "PH_NUM" VARCHAR2(10 BYTE) NOT NULL ENABLE,
    CONSTRAINT "FPDM_CONTACT_PK" PRIMARY KEY ("CONTACT_ID") ENABLE,
    CONSTRAINT "FPDM_CONTACT_FK1" FOREIGN KEY ("CUSTOMER_OF") REFERENCES "DGMARCU2"."FPDM_COMPETITOR" ("COMPETITOR_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_CONTACT_PH_NUM_CHK1" CHECK (REGEXP_LIKE(PH_NUM, '[0-9]{3}-?[0-9]{3}-?[0-9]{4}')) ENABLE
  );
  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_CONTACT_TRIG1"
   BEFORE INSERT ON FPDM_CONTACT
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.CONTACT_ID IS NULL )
   THEN
    :NEW.CONTACT_ID := FPDM_CONTACT_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_CONTACT_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."FPDM_CUSTOMER"
  (
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE,
    "PLAN_ID" NUMBER NOT NULL ENABLE,
    "SWITCHED_FROM" NUMBER,
    "DT_ENROLLED" DATE NOT NULL ENABLE,
    "EMAIL" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "FNAME" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "LNAME" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "STREET_NM" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "STREET_NUM" VARCHAR2(10 BYTE) NOT NULL ENABLE,
    "CITY" VARCHAR2(200 BYTE) NOT NULL ENABLE,
    "STATE" CHAR(2 BYTE) NOT NULL ENABLE,
    "ZIP" VARCHAR(10 BYTE) NOT NULL ENABLE,
    "PH_NUM" VARCHAR2(10 BYTE) NOT NULL ENABLE,
    "START_DT" DATE NOT NULL ENABLE,
    "END_DT" DATE,
    "CARD_NUM" VARCHAR2(20 BYTE) NOT NULL ENABLE,
    "CARD_EXPR_DT" DATE NOT NULL ENABLE,
    CONSTRAINT "FPDM_CUSTOMER_PK" PRIMARY KEY ("CUSTOMER_ID") ENABLE,
    CONSTRAINT "FPDM_CUSTOMER_FK1" FOREIGN KEY ("PLAN_ID") REFERENCES "DGMARCU2"."FPDM_PLAN" ("PLAN_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_CUSTOMER_FK2" FOREIGN KEY ("SWITCHED_FROM") REFERENCES "DGMARCU2"."FPDM_COMPETITOR" ("COMPETITOR_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_CUSTOMER_PH_NUM_CHK1" CHECK (REGEXP_LIKE(PH_NUM, '[0-9]{3}-?[0-9]{3}-?[0-9]{4}')) ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."FPDM_CUSTOMER"."CARD_EXPR_DT" IS 'CARDS EXPIRE ON THE LAST DATE OF THEIR EXPIRATION MONTH';
  COMMENT ON COLUMN "DGMARCU2"."FPDM_CUSTOMER"."STATE" IS 'ASSUMING ALL CLIENTS RESIDE WITHIN THE UNITED STATES';
  COMMENT ON COLUMN "DGMARCU2"."FPDM_CUSTOMER"."ZIP" IS 'ASSUMING ALL CLIENTS RESIDE WITHIN THE UNITED STATES';
  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_CUSTOMER_TRIG1"
   BEFORE INSERT ON FPDM_CUSTOMER
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.CUSTOMER_ID IS NULL )
   THEN
    :NEW.CUSTOMER_ID := FPDM_CUSTOMER_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_CUSTOMER_TRIG1" ENABLE;



CREATE TABLE "DGMARCU2"."FPDM_SITE"
  (
    "SITE_ID" NUMBER NOT NULL ENABLE,
    "STREET_NM" VARCHAR2(300 BYTE),
    "STREET_NUM" VARCHAR2(10 BYTE),
    "CITY" VARCHAR2(200 BYTE),
    "STATE" CHAR(2 BYTE),
    "ZIP" VARCHAR(10 BYTE),
    CONSTRAINT "FPDM_SITE_PK" PRIMARY KEY ("SITE_ID") ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."FPDM_SITE"."STATE" IS 'ASSUMING ALL CLIENTS RESIDE WITHIN THE UNITED STATES';
  COMMENT ON COLUMN "DGMARCU2"."FPDM_SITE"."ZIP" IS 'ASSUMING ALL CLIENTS RESIDE WITHIN THE UNITED STATES';
  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_SITE_TRIG1"
   BEFORE INSERT ON FPDM_SITE
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.SITE_ID IS NULL )
   THEN
    :NEW.SITE_ID := FPDM_SITE_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_SITE_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."FPDM_PHONE_SPECS"
  (
    "MODEL" VARCHAR2(400 BYTE) NOT NULL ENABLE,
    "PRICE" FLOAT NOT NULL ENABLE,
    "PRODUCER" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    CONSTRAINT "FPDM_PHONE_SPECS_PK" PRIMARY KEY ("MODEL") ENABLE
  );




CREATE TABLE "DGMARCU2"."FPDM_PHONE"
  (
    "PHONE_ID" NUMBER NOT NULL ENABLE,
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE,
    "PURCHASE_SITE" NUMBER NOT NULL ENABLE,
    "PURCHASE_DT" DATE NOT NULL ENABLE,
    "MODEL" VARCHAR2(400 BYTE) NOT NULL ENABLE,
    "SERIAL_NUM" VARCHAR2(400 BYTE) NOT NULL ENABLE,
    CONSTRAINT "FPDM_PHONE_PK" PRIMARY KEY ("PHONE_ID") ENABLE,
    CONSTRAINT "FPDM_PHONE_FK1" FOREIGN KEY ("PURCHASE_SITE") REFERENCES "DGMARCU2"."FPDM_SITE" ("SITE_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_PHONE_FK2" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "DGMARCU2"."FPDM_CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_PHONE_FK3" FOREIGN KEY ("MODEL") REFERENCES "DGMARCU2"."FPDM_PHONE_SPECS" ("MODEL") ON DELETE CASCADE ENABLE
  );
  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_PHONE_TRIG1"
   BEFORE INSERT ON FPDM_PHONE
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.PHONE_ID IS NULL )
   THEN
    :NEW.PHONE_ID := FPDM_PHONE_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_PHONE_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."FPDM_MOBILE"
  (
    "PHONE_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "FPDM_MOBILE_PK" PRIMARY KEY ("PHONE_ID") ENABLE,
    CONSTRAINT "FPDM_MOBILE_FK1" FOREIGN KEY ("PHONE_ID") REFERENCES "DGMARCU2"."FPDM_PHONE" ("PHONE_ID") ON DELETE CASCADE ENABLE
  );




CREATE TABLE "DGMARCU2"."FPDM_HOME"
  (
    "PHONE_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "FPDM_HOME_PK" PRIMARY KEY ("PHONE_ID") ENABLE,
    CONSTRAINT "FPDM_HOME_FK1" FOREIGN KEY ("PHONE_ID") REFERENCES "DGMARCU2"."FPDM_PHONE" ("PHONE_ID") ON DELETE CASCADE ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."FPDM_HOME"."PHONE_ID" IS 'TABLE NAMED HOME INSTEAD OF LANDLINE SO TO INCLUDE HOME PHONES WHICH ARE NOT NECESSARILY LANDLINE PHONES';




CREATE TABLE "DGMARCU2"."FPDM_UPGRADE"
  (
    "UPGRADE_ID" NUMBER NOT NULL ENABLE,
    "DESCRIPTION" VARCHAR2(3000 BYTE) NOT NULL ENABLE,
    CONSTRAINT "FPDM_UPGRADE_PK" PRIMARY KEY ("UPGRADE_ID") ENABLE
  );

  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_UPGRADE_TRIG1"
   BEFORE INSERT ON FPDM_UPGRADE
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.UPGRADE_ID IS NULL )
   THEN
    :NEW.UPGRADE_ID := FPDM_UPGRADE_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_UPGRADE_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."FPDM_OFFERED"
  (
    "UPGRADE_ID" NUMBER NOT NULL ENABLE,
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "FPDM_OFFERED_PK" PRIMARY KEY ("UPGRADE_ID", "CUSTOMER_ID") ENABLE,
    CONSTRAINT "FPDM_OFFERED_FK1" FOREIGN KEY ("UPGRADE_ID") REFERENCES "DGMARCU2"."FPDM_UPGRADE" ("UPGRADE_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_OFFERED_FK2" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "DGMARCU2"."FPDM_CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE
  );




CREATE TABLE "DGMARCU2"."FPDM_COMMUNICATION"
  (
    "COMMUNICATION_ID" NUMBER NOT NULL ENABLE,
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE,
    "DT" DATE NOT NULL ENABLE,
    CONSTRAINT "FPDM_COMMUNICATION_PK" PRIMARY KEY ("COMMUNICATION_ID") ENABLE,
    CONSTRAINT "FPDM_COMMUNICATION_FK1" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "DGMARCU2"."FPDM_CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE
  );
  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_COMMUNICATION_TRIG1"
   BEFORE INSERT ON FPDM_COMMUNICATION
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.COMMUNICATION_ID IS NULL )
   THEN
    :NEW.COMMUNICATION_ID := FPDM_COMMUNICATION_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_COMMUNICATION_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."FPDM_CALL"
  (
    "COMMUNICATION_ID" NUMBER NOT NULL ENABLE,
    "DURATION" FLOAT NOT NULL ENABLE,
    CONSTRAINT "FPDM_CALL_PK" PRIMARY KEY ("COMMUNICATION_ID") ENABLE,
    CONSTRAINT "FPDM_CALL_FK1" FOREIGN KEY ("COMMUNICATION_ID") REFERENCES "DGMARCU2"."FPDM_COMMUNICATION" ("COMMUNICATION_ID") ON DELETE CASCADE ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."FPDM_CALL"."DURATION" IS 'RECORDS NUMBER OF SECONDS CALL LASTED. NUMBER CAN BE CONVERTED TO H:M:S';




CREATE TABLE "DGMARCU2"."FPDM_TEXT"
  (
    "COMMUNICATION_ID" NUMBER NOT NULL ENABLE,
    "CONTENT" VARCHAR2(160 BYTE) NOT NULL ENABLE,
    CONSTRAINT "FPDM_TEXT_PK" PRIMARY KEY ("COMMUNICATION_ID") ENABLE,
    CONSTRAINT "FPDM_TEXT_FK1" FOREIGN KEY ("COMMUNICATION_ID") REFERENCES "DGMARCU2"."FPDM_COMMUNICATION" ("COMMUNICATION_ID") ON DELETE CASCADE ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."FPDM_TEXT"."CONTENT" IS 'SMS CHARACTER LIMIT OF 160';




CREATE TABLE "DGMARCU2"."FPDM_RECEIVED_BY"
  (
    "CUSTOMER_ID" NUMBER,
    "CONTACT_ID" NUMBER,
    "COMMUNICATION_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "FPDM_RECEIVED_BY_PK" PRIMARY KEY ("COMMUNICATION_ID") ENABLE,
    CONSTRAINT "FPDM_RECEIVED_BY_FK1" FOREIGN KEY ("CONTACT_ID") REFERENCES "DGMARCU2"."FPDM_CONTACT" ("CONTACT_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_RECEIVED_BY_FK2" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "DGMARCU2"."FPDM_CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_RECEIVED_BY_FK3" FOREIGN KEY ("COMMUNICATION_ID") REFERENCES "DGMARCU2"."FPDM_COMMUNICATION" ("COMMUNICATION_ID") ON DELETE CASCADE ENABLE
  );




CREATE TABLE "DGMARCU2"."FPDM_INCENTIVE"
  (
    "INCENTIVE_ID" NUMBER NOT NULL ENABLE,
    "DESCRIPTION" VARCHAR2(3000 BYTE) NOT NULL ENABLE,
    CONSTRAINT "FPDM_INCENTIVE_PK" PRIMARY KEY ("INCENTIVE_ID") ENABLE
  );
  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."FPDM_INCENTIVE_TRIG1"
   BEFORE INSERT ON FPDM_INCENTIVE
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.INCENTIVE_ID IS NULL )
   THEN
    :NEW.INCENTIVE_ID := FPDM_INCENTIVE_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."FPDM_INCENTIVE_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."FPDM_GIVEN"
  (
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE,
    "INCENTIVE_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "FPDM_GIVEN_PK" PRIMARY KEY ("CUSTOMER_ID", "INCENTIVE_ID") ENABLE,
    CONSTRAINT "FPDM_GIVEN_FK1" FOREIGN KEY ("INCENTIVE_ID") REFERENCES "DGMARCU2"."FPDM_INCENTIVE" ("INCENTIVE_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "FPDM_GIVEN_FK2" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "DGMARCU2"."FPDM_CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE
  );

/*TABLES, TRIGGERS END*/






/*RECORDS*/

/*PLANS*/
INSERT INTO FPDM_PLAN (PLAN_ID, PLAN_NM, MONTHLY_COST, DATA_CAP, MIN_CAP, TEXT_CAP)
VALUES (1, 'BARE_BONES', 30.0, 1000.0, 1000.0, 100);

INSERT INTO FPDM_PLAN (PLAN_ID, PLAN_NM, MONTHLY_COST, DATA_CAP, MIN_CAP, TEXT_CAP)
VALUES (2, 'UNLIMITED_TALKING', 50.0, 2000.99, 43200.0, 200);

INSERT INTO FPDM_PLAN (PLAN_ID, PLAN_NM, MONTHLY_COST, DATA_CAP, MIN_CAP, TEXT_CAP)
VALUES (3, 'UNLIMITED_TEXTING', 50.0, 2000.0, 3000.0, 100000000);

INSERT INTO FPDM_PLAN (PLAN_ID, PLAN_NM, MONTHLY_COST, DATA_CAP, MIN_CAP, TEXT_CAP)
VALUES (4, 'UNLIMITED_DATA', 80.0, 104857600.0, 5000.0, 800);

INSERT INTO FPDM_PLAN (PLAN_ID, PLAN_NM, MONTHLY_COST, DATA_CAP, MIN_CAP, TEXT_CAP)
VALUES (5, 'HIGH_ROLLER', 88.0, 100000.0, 9000.0, 2000);

INSERT INTO FPDM_PLAN (PLAN_ID, PLAN_NM, MONTHLY_COST, DATA_CAP, MIN_CAP, TEXT_CAP)
VALUES (6, 'UNLIMITED_EVERYTHING', 90.78, 104857600.0, 43200.0, 100000000);

INSERT INTO FPDM_PLAN (PLAN_ID, PLAN_NM, MONTHLY_COST, DATA_CAP, MIN_CAP, TEXT_CAP)
VALUES (7, 'LANDLINE', 45.00, 104857600.0, 43200.0, 100000000);



/*COMPETITORS*/
INSERT INTO FPDM_COMPETITOR (COMPETITOR_ID, COMPETITOR_NM)
VALUES (1, 'VERIZON');

INSERT INTO FPDM_COMPETITOR (COMPETITOR_ID, COMPETITOR_NM)
VALUES (2, 'ATT');

INSERT INTO FPDM_COMPETITOR (COMPETITOR_ID, COMPETITOR_NM)
VALUES (3, 'CRICKET');

INSERT INTO FPDM_COMPETITOR (COMPETITOR_ID, COMPETITOR_NM)
VALUES (4, 'SPRINT');

INSERT INTO FPDM_COMPETITOR (COMPETITOR_ID, COMPETITOR_NM)
VALUES (5, 'TMOBILE');



/*CONTACTS*/
INSERT INTO FPDM_CONTACT (CONTACT_ID, PH_NUM, CUSTOMER_OF)
VALUES (1, '3128790986', 1);

INSERT INTO FPDM_CONTACT (CONTACT_ID, PH_NUM, CUSTOMER_OF)
VALUES (2, '6574345565', 4);

INSERT INTO FPDM_CONTACT (CONTACT_ID, PH_NUM, CUSTOMER_OF)
VALUES (3, '0901119183', 3);

INSERT INTO FPDM_CONTACT (CONTACT_ID, PH_NUM, CUSTOMER_OF)
VALUES (4, '6578479043', 2);

INSERT INTO FPDM_CONTACT (CONTACT_ID, PH_NUM, CUSTOMER_OF)
VALUES (5, '1029388909', 5);

INSERT INTO FPDM_CONTACT (CONTACT_ID, PH_NUM, CUSTOMER_OF)
VALUES (6, '1900976575', 2);



/*CUSTOMERS*/
INSERT INTO FPDM_CUSTOMER (CUSTOMER_ID, PLAN_ID, DT_ENROLLED, EMAIL, FNAME, LNAME, STREET_NM, STREET_NUM, CITY, STATE, ZIP, PH_NUM, START_DT, CARD_NUM, CARD_EXPR_DT)
VALUES (1, 2, TO_DATE('2016/09/09', 'YYYY/MM/DD'), 'DAVEGILMOUR@GMAIL.COM', 'DAVE', 'GILMOUR', 'SYCAMOUR RD', '411', 'GLENCOE', 'IL', '60022', '9897673343', TO_DATE('2016/09/09', 'YYYY/MM/DD'), '6565747483839292', TO_DATE('2019/10/31', 'YYYY/MM/DD'));

INSERT INTO FPDM_CUSTOMER (CUSTOMER_ID, PLAN_ID, DT_ENROLLED, EMAIL, FNAME, LNAME, STREET_NM, STREET_NUM, CITY, STATE, ZIP, PH_NUM, START_DT, END_DT, CARD_NUM, CARD_EXPR_DT)
VALUES (2, 3, TO_DATE('2014/09/09', 'YYYY/MM/DD'), 'ROGERWATERS@GMAIL.COM', 'ROGER', 'WATERS', 'GREEN SR', '822', 'SEATTLE', 'WA', '89922', '2312349909', TO_DATE('2014/09/09', 'YYYY/MM/DD'), TO_DATE('2017/08/12', 'YYYY/MM/DD'),'6666999901012323', TO_DATE('2017/11/30', 'YYYY/MM/DD'));

INSERT INTO FPDM_CUSTOMER (CUSTOMER_ID, PLAN_ID, SWITCHED_FROM, DT_ENROLLED, EMAIL, FNAME, LNAME, STREET_NM, STREET_NUM, CITY, STATE, ZIP, PH_NUM, START_DT, CARD_NUM, CARD_EXPR_DT)
VALUES (3, 2, 1, TO_DATE('2017/01/03', 'YYYY/MM/DD'), 'RICKWRIGHT@GMAIL.COM', 'RICK', 'WRIGHT', 'FIRST ST', '87', 'CHICAGO', 'IL', '60059', '4347776723', TO_DATE('2017/01/03', 'YYYY/MM/DD'), '9090445467875432', TO_DATE('2020/01/31', 'YYYY/MM/DD'));

INSERT INTO FPDM_CUSTOMER (CUSTOMER_ID, PLAN_ID, SWITCHED_FROM, DT_ENROLLED, EMAIL, FNAME, LNAME, STREET_NM, STREET_NUM, CITY, STATE, ZIP, PH_NUM, START_DT, CARD_NUM, CARD_EXPR_DT)
VALUES (4, 6, 2, TO_DATE('2018/05/24', 'YYYY/MM/DD'), 'NICKMASON@GMAIL.COM', 'NICK', 'MASON', 'DANIELS ST', '901', 'CHAMPAIGN', 'IL', '61820', '9890006453', TO_DATE('2018/05/24', 'YYYY/MM/DD'), '676788984321', TO_DATE('2021/09/30', 'YYYY/MM/DD'));

INSERT INTO FPDM_CUSTOMER (CUSTOMER_ID, PLAN_ID, SWITCHED_FROM, DT_ENROLLED, EMAIL, FNAME, LNAME, STREET_NM, STREET_NUM, CITY, STATE, ZIP, PH_NUM, START_DT, END_DT, CARD_NUM, CARD_EXPR_DT)
VALUES (5, 5, 2, TO_DATE('2015/03/04', 'YYYY/MM/DD'), 'SYDBARRETT@GMAIL.COM', 'SYD', 'BARRETT', 'THIRD ST', '2231', 'SAVOY', 'IL', '61890', '2327876656', TO_DATE('2015/03/04', 'YYYY/MM/DD'), TO_DATE('2018/11/25', 'YYYY/MM/DD'), '767600009823', TO_DATE('2021/09/30', 'YYYY/MM/DD'));

INSERT INTO FPDM_CUSTOMER (CUSTOMER_ID, PLAN_ID, DT_ENROLLED, EMAIL, FNAME, LNAME, STREET_NM, STREET_NUM, CITY, STATE, ZIP, PH_NUM, START_DT, CARD_NUM, CARD_EXPR_DT)
VALUES (6, 4, TO_DATE('2011/02/08', 'YYYY/MM/DD'), 'STORMTHORGERSON@GMAIL.COM', 'STORM', 'THORGERSON', 'STRAWBERRY ST', '675', 'WILMETTE', 'IL', '67894', '7680904547', TO_DATE('2011/02/08', 'YYYY/MM/DD'), '342495489054', TO_DATE('2019/01/31', 'YYYY/MM/DD'));

INSERT INTO FPDM_CUSTOMER (CUSTOMER_ID, PLAN_ID, SWITCHED_FROM, DT_ENROLLED, EMAIL, FNAME, LNAME, STREET_NM, STREET_NUM, CITY, STATE, ZIP, PH_NUM, START_DT, CARD_NUM, CARD_EXPR_DT)
VALUES (7, 4, 4, TO_DATE('2016/07/01', 'YYYY/MM/DD'), 'PINKFLOYD@GMAIL.COM', 'PINK', 'FLOYD', 'SHERIDAN RD', '5409', 'WINNETKA', 'IL', '61829', '4789209845', TO_DATE('2016/07/01', 'YYYY/MM/DD'), '756490901950', TO_DATE('2019/11/30', 'YYYY/MM/DD'));



/*PURCHASE SITES*/
INSERT INTO FPDM_SITE (SITE_ID)
VALUES (1);

INSERT INTO FPDM_SITE (SITE_ID, STREET_NM, STREET_NUM, CITY, STATE, ZIP)
VALUES (2, 'GREEN ST', '545', 'CHAMPAIGN', 'IL', '61820');

INSERT INTO FPDM_SITE (SITE_ID, STREET_NM, STREET_NUM, CITY, STATE, ZIP)
VALUES (3, 'WRIGHT ST', '343', 'SAVOY', 'IL', '61829');

INSERT INTO FPDM_SITE (SITE_ID, STREET_NM, STREET_NUM, CITY, STATE, ZIP)
VALUES (4, 'ANDREWS ST', '44', 'URBANA', 'IL', '61810');

INSERT INTO FPDM_SITE (SITE_ID, STREET_NM, STREET_NUM, CITY, STATE, ZIP)
VALUES (5, 'FIRST ST', '235', 'SUNNYVILLE', 'CA', '38899');



/*PHONE MODELS & SPECS*/
INSERT INTO FPDM_PHONE_SPECS (MODEL, PRICE, PRODUCER)
VALUES ('IPHONE 6', 800.00, 'APPLE');

INSERT INTO FPDM_PHONE_SPECS (MODEL, PRICE, PRODUCER)
VALUES ('IPHONE 5', 599.99, 'APPLE');

INSERT INTO FPDM_PHONE_SPECS (MODEL, PRICE, PRODUCER)
VALUES ('GOOGLE PIXEL', 700.00, 'GOOGLE');

INSERT INTO FPDM_PHONE_SPECS (MODEL, PRICE, PRODUCER)
VALUES ('GALAXY S6', 799.99, 'SAMSUNG');

INSERT INTO FPDM_PHONE_SPECS (MODEL, PRICE, PRODUCER)
VALUES ('PANASONIC DECT 6.0', 45.99, 'PANASONIC');



/*PHONES*/
INSERT INTO FPDM_PHONE (PHONE_ID, CUSTOMER_ID, PURCHASE_SITE, PURCHASE_DT, MODEL, SERIAL_NUM)
VALUES (1, 1, 1, TO_DATE('2016/09/09', 'YYYY/MM/DD'), 'IPHONE 6', '9900000XC7887');

INSERT INTO FPDM_PHONE (PHONE_ID, CUSTOMER_ID, PURCHASE_SITE, PURCHASE_DT, MODEL, SERIAL_NUM)
VALUES (2, 2, 5, TO_DATE('2014/09/09', 'YYYY/MM/DD'), 'PANASONIC DECT 6.0', '767V7809NI9');

INSERT INTO FPDM_PHONE (PHONE_ID, CUSTOMER_ID, PURCHASE_SITE, PURCHASE_DT, MODEL, SERIAL_NUM)
VALUES (3, 3, 3, TO_DATE('2018/02/03', 'YYYY/MM/DD'), 'GALAXY S6', '6765439DS');

INSERT INTO FPDM_PHONE (PHONE_ID, CUSTOMER_ID, PURCHASE_SITE, PURCHASE_DT, MODEL, SERIAL_NUM)
VALUES (4, 4, 2, TO_DATE('2018/02/03', 'YYYY/MM/DD'), 'GALAXY S6', '6765439DS');

INSERT INTO FPDM_PHONE (PHONE_ID, CUSTOMER_ID, PURCHASE_SITE, PURCHASE_DT, MODEL, SERIAL_NUM)
VALUES (5, 5, 4, TO_DATE('2015/03/04', 'YYYY/MM/DD'), 'IPHONE 5', '123HDGF780X8J4');

INSERT INTO FPDM_PHONE (PHONE_ID, CUSTOMER_ID, PURCHASE_SITE, PURCHASE_DT, MODEL, SERIAL_NUM)
VALUES (6, 6, 1, TO_DATE('2016/06/26', 'YYYY/MM/DD'), 'IPHONE 6', '87GH78C9S9D096GK');

INSERT INTO FPDM_PHONE (PHONE_ID, CUSTOMER_ID, PURCHASE_SITE, PURCHASE_DT, MODEL, SERIAL_NUM)
VALUES (7, 7, 5, TO_DATE('2016/07/01', 'YYYY/MM/DD'), 'IPHONE 5', '787DG456374HGF');



/*MOBILES*/
INSERT INTO FPDM_MOBILE (PHONE_ID)
VALUES (1);

INSERT INTO FPDM_MOBILE (PHONE_ID)
VALUES (3);

INSERT INTO FPDM_MOBILE (PHONE_ID)
VALUES (4);

INSERT INTO FPDM_MOBILE (PHONE_ID)
VALUES (5);

INSERT INTO FPDM_MOBILE (PHONE_ID)
VALUES (6);

INSERT INTO FPDM_MOBILE (PHONE_ID)
VALUES (7);



/*HOME PHONES*/
INSERT INTO FPDM_HOME (PHONE_ID)
VALUES (2);



/*UPGRADES*/
INSERT INTO FPDM_UPGRADE (UPGRADE_ID, DESCRIPTION)
VALUES (1, 'FREE PHONE!');

INSERT INTO FPDM_UPGRADE (UPGRADE_ID, DESCRIPTION)
VALUES (2, 'NEW PHONE 50 PERCENT OFF!');



/*UPGRADES OFFERED*/
INSERT INTO FPDM_OFFERED (UPGRADE_ID, CUSTOMER_ID)
VALUES (1, 1);

INSERT INTO FPDM_OFFERED (UPGRADE_ID, CUSTOMER_ID)
VALUES (2, 2);

INSERT INTO FPDM_OFFERED (UPGRADE_ID, CUSTOMER_ID)
VALUES (1, 5);

INSERT INTO FPDM_OFFERED (UPGRADE_ID, CUSTOMER_ID)
VALUES (1, 6);

INSERT INTO FPDM_OFFERED (UPGRADE_ID, CUSTOMER_ID)
VALUES (2, 7);



/*COMMUNICATIONS*/
INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (1, 1, TO_DATE('2016/10/09', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (2, 1, TO_DATE('2017/02/13', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (3, 1, TO_DATE('2017/05/16', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (4, 3, TO_DATE('2017/04/05', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (5, 3, TO_DATE('2017/05/16', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (6, 4, TO_DATE('2018/06/25', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (7, 4, TO_DATE('2018/07/01', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (8, 4, TO_DATE('2018/08/14', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (9, 5, TO_DATE('2016/06/16', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (10, 5, TO_DATE('2017/03/15', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (11, 6, TO_DATE('2011/11/11', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (12, 6, TO_DATE('2011/12/01', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (13, 6, TO_DATE('2013/02/03', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (14, 6, TO_DATE('2015/09/27', 'YYYY/MM/DD'));

INSERT INTO FPDM_COMMUNICATION (COMMUNICATION_ID, CUSTOMER_ID, DT)
VALUES (15, 7, TO_DATE('2017/06/21', 'YYYY/MM/DD'));



/*CALLS*/
INSERT INTO FPDM_CALL (COMMUNICATION_ID, DURATION)
VALUES (1, 23.4);

INSERT INTO FPDM_CALL (COMMUNICATION_ID, DURATION)
VALUES (4, 5.9);

INSERT INTO FPDM_CALL (COMMUNICATION_ID, DURATION)
VALUES (13, 29.2);


/*TEXTS*/
INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (2, 'HEY');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (3, 'SUP');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (5, 'DO YOU WANT TO GET FOOD LATER?');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (6, 'SORRY I MIGHT BE A FEW MINUTES LATE');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (7, 'YO YO YOOO!!');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (8, 'HAHAHHA NO WAY');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (9, 'NO DUDE, LED ZEPPLIN IS NOT EVEN ON THE SAME *LEVEL* AS PINK FLOYD');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (10, 'WHATEVER, FINE');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (11, 'I AM HUNGRYY');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (12, 'OK');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (13, 'NO WORRIES!');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (14, 'ROFL!');

INSERT INTO FPDM_TEXT (COMMUNICATION_ID, CONTENT)
VALUES (15, 'WHAT IS UP MA DUDE');



/*RECEIVED BY*/
/*6 contacts 7 customers 15 communications*/
INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CUSTOMER_ID)
VALUES (1, 5);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CUSTOMER_ID)
VALUES (2, 3);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CUSTOMER_ID)
VALUES (3, 1);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CONTACT_ID)
VALUES (4, 1);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CONTACT_ID)
VALUES (5, 2);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CONTACT_ID)
VALUES (6, 3);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CUSTOMER_ID)
VALUES (7, 4);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CUSTOMER_ID)
VALUES (8, 5);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CUSTOMER_ID)
VALUES (9, 6);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CUSTOMER_ID)
VALUES (10, 7);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CONTACT_ID)
VALUES (11, 4);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CONTACT_ID)
VALUES (12, 5);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CONTACT_ID)
VALUES (13, 6);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CONTACT_ID)
VALUES (14, 6);

INSERT INTO FPDM_RECEIVED_BY (COMMUNICATION_ID, CUSTOMER_ID)
VALUES (15, 7);



/*INCENTIVES*/
INSERT INTO FPDM_INCENTIVE (INCENTIVE_ID, DESCRIPTION)
VALUES (1, '20 PERCENT OFF YOUR PLAN FOR A YEAR');

INSERT INTO FPDM_INCENTIVE (INCENTIVE_ID, DESCRIPTION)
VALUES (2, 'FREE NEW PHONE UPGRADE!');

INSERT INTO FPDM_INCENTIVE (INCENTIVE_ID, DESCRIPTION)
VALUES (3, 'TEN PERCENT OFF YOUR PLAN FOR TWO YEARS!');



/*INCENTIVES GIVEN*/
INSERT INTO FPDM_GIVEN (CUSTOMER_ID, INCENTIVE_ID)
VALUES (1, 2);

INSERT INTO FPDM_GIVEN (CUSTOMER_ID, INCENTIVE_ID)
VALUES (3, 3);

INSERT INTO FPDM_GIVEN (CUSTOMER_ID, INCENTIVE_ID)
VALUES (5, 3);

INSERT INTO FPDM_GIVEN (CUSTOMER_ID, INCENTIVE_ID)
VALUES (4, 2);

/*RECORDS END*/









/*QUERIES START*/
/*GET THE IDS AND NAMES OF CUSTOMERS WHO PURCHASED A PHONE BEFORE 2017 AND HAVE BEEN OFFERED A 'FREE NEW PHONE UPGRADE!' INCENTIVE */
SELECT FPDM_CUSTOMER.CUSTOMER_ID,
  FPDM_CUSTOMER.FNAME,
  FPDM_CUSTOMER.LNAME
FROM FPDM_CUSTOMER,
  FPDM_PHONE,
  FPDM_GIVEN,
  FPDM_INCENTIVE
WHERE FPDM_PHONE.CUSTOMER_ID = FPDM_CUSTOMER.CUSTOMER_ID
  AND FPDM_GIVEN.CUSTOMER_ID = FPDM_CUSTOMER.CUSTOMER_ID
  AND FPDM_GIVEN.INCENTIVE_ID = FPDM_INCENTIVE.INCENTIVE_ID
  AND FPDM_INCENTIVE.DESCRIPTION = 'FREE NEW PHONE UPGRADE!'
  AND FPDM_PHONE.PURCHASE_DT < TO_DATE('2017/01/01', 'YYYY/MM/DD');



/*GET THE NAMES, PLAN NAMES, PHONE NUMBERS, EMAILS, AND START DATES OF ALL CUSTOMERS WHO SWITCHED TO THE TELECOMMUNICATIONS COMPANY FROM ANOTHER TELECOMMUNICATIONS PROVIDER. ALSO GET THE NAMES OF THE COMPETITORS THAT THE CUSTOMERS SWITCHED FROM.*/
SELECT FPDM_CUSTOMER.FNAME,
  FPDM_CUSTOMER.LNAME,
  FPDM_PLAN.PLAN_NM,
  FPDM_CUSTOMER.PH_NUM,
  FPDM_CUSTOMER.EMAIL,
  FPDM_CUSTOMER.START_DT,
  FPDM_COMPETITOR.COMPETITOR_NM
FROM (FPDM_CUSTOMER
  INNER JOIN FPDM_PLAN
    ON FPDM_PLAN.PLAN_ID = FPDM_CUSTOMER.PLAN_ID)
  INNER JOIN FPDM_COMPETITOR
    ON FPDM_COMPETITOR.COMPETITOR_ID = FPDM_CUSTOMER.SWITCHED_FROM;



/*GET THE CONTENTS OF ALL THE TEXT MESSAGES SENT BY CUSTOMERS AFTER THE YEAR 2016. ALSO GET THE NAMES AND PHONE NUMBERS OF THE CUSTOMERS WHO SENT THEM, AND THE DATE ON WHICH THE TEXTS WERE SENT.*/
SELECT TX.CONTENT,
  C.FNAME,
  C.LNAME,
  C.PH_NUM,
  CU.DT
FROM
  (FPDM_COMMUNICATION CU
    INNER JOIN FPDM_CUSTOMER C
      ON CU.CUSTOMER_ID = C.CUSTOMER_ID)
    INNER JOIN FPDM_TEXT TX
      ON CU.COMMUNICATION_ID = TX.COMMUNICATION_ID
WHERE CU.DT > TO_DATE('2016/12/31', 'YYYY/MM/DD');



/*COUNT THE NUMBER OF CUSTOMERS WHO PURCHASED THEIR PHONES ONLINE*/
SELECT COUNT(*)
FROM FPDM_CUSTOMER C,
  FPDM_PHONE P,
  FPDM_SITE S
WHERE P.CUSTOMER_ID = C.CUSTOMER_ID
  AND P.PURCHASE_SITE = S.SITE_ID
  AND S.SITE_ID = 1;



/*GIVE THE PLAN NAMES AND PLAN IDS OF EVERY CUSTOMER WHO HAS PURCHASED AN IPHONE 5 OR AN IPHONE 6. ALSO RETURN THE MODELS AND SERIAL NUMBERS OF THE IPHONES, AND THE IDS OF THE CUSTOMERS WHO PURCHASED THEM.*/
SELECT PL.PLAN_ID,
  PL.PLAN_NM, PH.MODEL,
  PH.SERIAL_NUM,
  C.CUSTOMER_ID
FROM FPDM_PLAN PL,
  FPDM_CUSTOMER C,
  FPDM_PHONE PH
WHERE C.PLAN_ID = PL.PLAN_ID
  AND PH.CUSTOMER_ID = C.CUSTOMER_ID
  AND (PH.MODEL = 'IPHONE 6' OR PH.MODEL = 'IPHONE 5');



/*GET THE CONTENTS OF ALL TEXT MESSAGES SENT BY CUSTOMERS THAT WERE RECEIVED BY CONTACTS WHO ARE NOT ALSO CUSTOMERS. ALSO INCLUDE THE IDS OF THE CONTACTS THAT RECEIVED THE MESSAGES, THE COMMUNICATION ID, DATE ON WHICH THE TEXTS WERE SENT, AND THE NAMES OF THE CUSTOMERS WHO SENT THEM.*/
SELECT TX.CONTENT,
  CT.CONTACT_ID,
  CU.COMMUNICATION_ID,
  CU.DT,
  C.FNAME,
  C.LNAME
FROM FPDM_CUSTOMER C,
  FPDM_COMMUNICATION CU,
  FPDM_TEXT TX,
  FPDM_CONTACT CT,
  FPDM_RECEIVED_BY R
WHERE CU.CUSTOMER_ID = C.CUSTOMER_ID
  AND CU.COMMUNICATION_ID = TX.COMMUNICATION_ID
  AND CT.CONTACT_ID = R.CONTACT_ID
  AND CU.COMMUNICATION_ID = R.COMMUNICATION_ID;
  
/*QUERIES END*/
